/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUIs;

import FileSystem.Directorio;
import FileSystem.SistemaArchivos;
import java.awt.BorderLayout;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author Gabriel
 */
public class EliminarDirectorio extends javax.swing.JFrame {
    private static SistemaArchivos sistemaArchivos;
    private String rutaSeleccionada;
    /**
     * Creates new form EliminarDirectorio
     */
    public EliminarDirectorio(SistemaArchivos sistemaArchivos) {
        this.sistemaArchivos=sistemaArchivos;
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Eliminar directorio");

        jButton1.setText("Seleccionar directorio");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar directorio");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton2))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton1)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addGap(32, 32, 32)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Seleccionar directorio
        // Crear una nueva ventana emergente (JDialog)
        JDialog dialog = new JDialog(this, "Seleccionar Directorio", true);
        dialog.setLayout(new BorderLayout());
        
        // Construir el JTree con los datos del sistema de archivos
        JTree tree = sistemaArchivos.construirJTree();
        tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);

        // Evento para seleccionar un directorio y cerrar la ventana
        tree.addTreeSelectionListener(e -> {
            DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
            if (selectedNode != null) {
                String ruta = obtenerRutaDesdeNodo(selectedNode);
                ruta="/"+ruta;
                System.out.println("Ruta generada: " + ruta); 
                Directorio directorio = sistemaArchivos.buscarDirectorioPorRuta(sistemaArchivos.getRaiz(), ruta);

                //Verifica que sea un directorio y no un archivo
                if (directorio != null) {
                    rutaSeleccionada=ruta;
                    JOptionPane.showMessageDialog(this, "Directorio seleccionado: " + ruta);
                    dialog.dispose(); // Cierra el diálogo al seleccionar
                } else {
                    JOptionPane.showMessageDialog(this, "El elemento seleccionado no es un directorio válido.");
                    ruta=null;
                }
            }
        });

        // Mostrar el árbol en un JScrollPane
        JScrollPane scrollPane = new JScrollPane(tree);
        dialog.add(scrollPane, BorderLayout.CENTER);

        //Configurar tamaño y visibilidad de la ventana
        dialog.setSize(400, 500);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Eliminar directorio
        if (rutaSeleccionada == null || rutaSeleccionada.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Seleccione una ruta válida.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        Directorio directorio =sistemaArchivos.buscarDirectorioPorRuta(sistemaArchivos.getRaiz(), rutaSeleccionada);
        
        if (directorio==sistemaArchivos.getRaiz()){
            JOptionPane.showMessageDialog(this, "Directorio seleccionado invalido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Directorio padre=directorio.getPadre();
        
        padre.eliminarDirectorio(directorio);
        JOptionPane.showMessageDialog(this, "Directorio eliminado", "Error", JOptionPane.ERROR_MESSAGE);
          System.out.println("Creando vistaDisco...");
    viewDisco vistaDisco = new viewDisco(sistemaArchivos);
    vistaDisco.actualizarVista();
    vistaDisco.setVisible(true);
    System.out.println("Ventana vistaDisco visible.");

    // Actualizar vista
    vistaDisco.actualizarVista();
    System.out.println("Vista actualizada.");
    }//GEN-LAST:event_jButton2ActionPerformed
    
    //️ Método para obtener la ruta desde el nodo seleccionado
    private String obtenerRutaDesdeNodo(DefaultMutableTreeNode node) {
        StringBuilder ruta = new StringBuilder(node.toString());
        TreeNode parent = node.getParent();

        while (parent != null) {
            ruta.insert(0, parent.toString() + "/");
            parent = parent.getParent();
        }

        // Eliminar la última "/" si existe
        if (ruta.length() > 1 && ruta.charAt(ruta.length() - 1) == '/') {
            ruta.deleteCharAt(ruta.length() - 1);
        }
        return ruta.toString();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EliminarDirectorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EliminarDirectorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EliminarDirectorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EliminarDirectorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EliminarDirectorio(sistemaArchivos).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
